name: CI
"on":
  push:
    tags:
      - "v*"
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  Test:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "pip"
          cache-dependency-path: "**/requirements*txt"
      - run: pip install -U pip setuptools wheel
      - run: "pip install -e . -r requirements-test.txt"
      - run: make test
        env:
          EMAIL: foo@example.com
          GIT_AUTHOR_NAME: Foo Bar
          GIT_COMMITTER_NAME: Foo Bar
      - uses: codecov/codecov-action@v2
  Lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "**/requirements*txt"
      - run: pip install -U pip setuptools wheel
      - run: "pip install -r requirements-lint.txt"
      - run: make lint
  Mypy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "**/requirements*txt"
      - run: pip install -U pip setuptools wheel
      - run: "pip install -e ."
      - run: "pip install -r requirements-typecheck.txt"
      - run: make mypy
  Build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "**/requirements*txt"
      - run: pip install build
      - run: python -m build
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print_hash: true
          password: ${{ secrets.PYPI_API_TOKEN }}
